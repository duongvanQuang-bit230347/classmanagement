name: Java CI/CD with Maven - Build and Deploy WAR

on:
  push:
    branches: [main]
    paths:
      - "src/main/**"
      - "src/test/**"
      - "pom.xml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build WAR with Maven
        run: mvn clean package -DskipTests

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-war
          path: target/*.war

  deploy:
    runs-on: [self-hosted, windows]
    needs: build
    steps:
      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-war
          path: ./artifacts

      - name: Stop Tomcat
        run: |
          powershell -Command "& {
            $service = Get-Service -Name 'Tomcat11' -ErrorAction SilentlyContinue
            if ($service -and $service.Status -eq 'Running') {
              Stop-Service -Name 'Tomcat11' -Force
              Start-Sleep -Seconds 10
            } else {
              Write-Host 'Tomcat service not found or already stopped.'
            }
          }"

      - name: Deploy WAR to Tomcat
        run: |
          powershell -Command "& {
            $tomcatWebapps = 'C:\Program Files\Apache Software Foundation\Tomcat 11.0\webapps'
            $warFile = Get-ChildItem -Path .\artifacts\*.war | Select-Object -First 1
            if ($warFile) {
              Remove-Item -Path \"$tomcatWebapps\*\" -Recurse -Force -ErrorAction SilentlyContinue
              Copy-Item -Path $warFile.FullName -Destination $tomcatWebapps -Force
            } else {
              Write-Error 'WAR file not found!'
              exit 1
            }
          }"

      - name: Start Tomcat
        run: |
          powershell -Command "& {
            Start-Service -Name 'Tomcat11'
            Start-Sleep -Seconds 15
          }"

      - name: Verify Deployment
        run: |
          powershell -Command "& {
            $url = 'http://localhost:8080/classroommanagement/'
            try {
              $response = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 20
              if ($response.StatusCode -eq 200) {
                Write-Host '✅ Deployment successful!'
              } else {
                Write-Error '❌ Deployment failed: Unexpected response.'
                exit 1
              }
            } catch {
              Write-Error '❌ Deployment failed: ' + $_.Exception.Message
              exit 1
            }
          }"
